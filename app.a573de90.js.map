{"version":3,"sources":["webpack:///./src/CausalStructure/Attribute.js","webpack:///./src/CausalStructure/AttributesManager.js","webpack:///./src/CausalStructure/DAGEditor.js","webpack:///./src/CausalStructure/DownloadDialog.js","webpack:///./src/CausalStructure/TagDialog.js","webpack:///./src/CausalStructure/NodeDialog.js","webpack:///./src/DAG.js","webpack:///./src/index.js"],"names":["Attribute","_ref","value","color","isAdded","treatment","outcome","addAttribute","deleteAttribute","changeTreatment","changeOutcome","handleAddTag","colorMap","open","setOpen","React","useState","anchorPos","setAnchorPos","handleClose","buttonStyle","rgb","rgba","createElement","Button","sx","onClick","onContextMenu","e","preventDefault","clientX","clientY","handleContextMenu","variant","title","Menu","id","anchorReference","anchorPosition","style","onClose","MenuListProps","MenuItem","selected","_ref2","AddOutlinedIcon","_ref3","AttributesManager","attributes","added","handleNodeOpen","getColor","indexOf","startIcon","map","index","key","FullscreenExitOutlinedIcon","_ref4","_ref5","DAGEditor","layout","nodelinks","mode","mediators","colliders","confounds","prognostics","search","updateNodePos","updateLinks","deleteLinks","_svg","contextItem","setContextItem","setSelected","setColorMap","isSearched","n","name","startsWith","tags","slice","useEffect","node","filter","attr","m","d","text","co","con","ref","useRef","currentPath","svg","d3","current","svgElement","select","zoom","extent","width","height","scaleExtent","on","transform","getAngle","theta","angle","Math","PI","call","arrowleft","selectAll","data","links","join","target","x","source","y","atan","abs","cos","sin","arrowright","nodeColor","nodes","link","this","getStrokeWidth","el","l","onDrag","stopPropagation","length","push","cp","covariateTypes","margin","i","IconButton","transition","duration","DialogTitle","FormLabel","component","DownloadDialog","checked","setChecked","nodelinkCheck","treatmentCheck","outcomeCheck","confoundsCheck","mediatorsCheck","collidersCheck","prognosticsCheck","error","setError","downloadJSON","setJSON","filename","setFilename","handleChange","val","newError","Object","values","v","newDownload","JSON","parse","stringify","children","parents","Dialog","fullWidth","maxWidth","DialogContent","TextField","defaultValue","label","onChange","handleFilenameChange","DialogContentText","FormControl","required","FormGroup","FormControlLabel","control","Checkbox","multiline","maxRows","InputProps","readOnly","DialogActions","fileContent","Blob","type","saveAs","TagDialog","tagNode","tagColors","attrTags","handleTagClose","updateTag","deleteTag","setValue","colorOpen","setColorOpen","setColor","colorStyle","stackStyle","Stack","direction","spacing","Chip","onDelete","handleDelete","Autocomplete","disablePortal","freeSolo","options","keys","onInputChange","handleInputChange","renderInput","params","_extends","handleClick","position","zIndex","top","right","bottom","left","SwatchesPicker","hex","handleAdd","NodeDialog","handleNodeClose","addCustom","NearMeOutlinedIcon","AddPhotoAlternateOutlinedIcon","FileDownloadOutlinedIcon","DAG","graph","_dag","_colliders","_mediators","_confounds","_prognostics","setnodelinks","setMode","addNode","setAddNode","addTag","setAddTag","setTagNode","setTagColors","setSearch","setColliders","setMediators","setConfounds","setPrognostics","allAttributes","setAllAttributes","setAdded","setTreatment","setOutcome","allDescendants","setAllDescendants","ID","setID","Set","generateID","Date","getTime","floor","random","updateJupyter","jdag","jcolliders","jmediators","jconfounds","jprognostics","hidden","document","getElementById","nodelinks_string","jupyter_colliders","jupyter_mediators","jupyter_confounds","jupyter_prognostics","event","createEvent","initEvent","dispatchEvent","custom","newnodelinks","splice","newNodes","newLinks","attribute","xScale","scaleLinear","domain","range","yScale","newID","newAllAttributes","has","add","s","t","sourceNode","targetNode","loadGraph","nodelink_string","a","newColliders","Array","from","getColliders","colliderNames","c","newMediators","getMediators","newConfounds","getConfounds","newPrognostics","getPrognostics","p","downloadSVG","svgString","format","callback","imgsrc","btoa","unescape","encodeURIComponent","canvas","context","getContext","image","Image","onload","clearRect","drawImage","toBlob","blob","filesize","round","src","svgString2Image","svgNode","setAttribute","XMLSerializer","serializeToString","replace","getSVGString","dataBlob","getDescendents","stopID","result","nodeC","concat","treatmentID","outcomeID","allPrognostic","isMediator","isConfound","childrenHasOutcome","childrenHasTreatment","o","treatmentChildren","outcomeChildren","oID","paths","hasOutcome","size","nodeResult","r","med","nDescendents","nodeDescendents","nd","createTheme","palette","grey","light","main","dark","contrastText","aStyle","searchStyle","tagName","taggingNode","tagIndex","ToggleButtonGroup","exclusive","toggleMode","aria-label","ToggleButton","alt","LinearScaleRoundedIcon","changeSearch","handleClickOpen","Paper","elevation","newX","newY","newLink","alert","newLinkCopy","newlinks","delete","href","Causalvis","render","querySelector"],"mappings":"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","file":"app.a573de90.js","sourcesContent":["import React, {useState} from 'react';\n\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// import MoreVertIcon from '@mui/icons-material/MoreVert';\n\nimport { grey, blue, orange } from '@mui/material/colors';\n\nexport const Attribute = ({value=[], color=\"black\", isAdded=false, treatment, outcome, addAttribute, deleteAttribute, changeTreatment, changeOutcome, handleAddTag}) => {\n  \n  const colorMap = {\"grey\": {\"rgb\": \"rgb(158, 158, 158)\", \"rgba\": \"rgba(158, 158, 158, 0.05)\"},\n                    \"treatment\": {\"rgb\": \"rgb(78, 121, 167)\", \"rgba\": \"rgba(78, 121, 167, 0.05)\"},\n                    \"outcome\": {\"rgb\": \"rgb(242, 142, 44)\", \"rgba\": \"rgba(242, 142, 44, 0.05)\"},\n                    \"black\": {\"rgb\": \"rgb(0, 0, 0)\", \"rgba\": \"rgba(0, 0, 0, 0.05)\"}};\n\n  const [open, setOpen] = React.useState(false);\n  const [anchorPos, setAnchorPos] = React.useState(null);\n\n  function handleClose() {\n    setAnchorPos(null);\n    setOpen(false);\n  }\n\n  // Toggle open/close context menu for attributes that are added to graph\n  function handleContextMenu(e) {\n    e.preventDefault();\n    if (isAdded) {\n      setOpen(!open);\n      setAnchorPos({\"left\": e.clientX + 2, \"top\": e.clientY - 6})\n    }\n  }\n\n  // Set this attribute as treatment\n  // If attribute already is treatment, deselect\n  function handleTreatment() {\n    if (treatment === value) {\n      changeTreatment(\"\");\n      handleClose();\n    } else if (outcome === value) {\n      changeTreatment(value);\n      changeOutcome(\"\");\n      handleClose();\n    } else {\n      changeTreatment(value);\n      handleClose();\n    }\n  }\n\n  // Set this attribute as outcome\n  // If attribute already is outcome, deselect\n  function handleOutcome() {\n    if (outcome === value) {\n      changeOutcome(\"\");\n      handleClose();\n    } else if (treatment === value) {\n      changeOutcome(value);\n      changeTreatment(\"\");\n      handleClose();\n    } else {\n      changeOutcome(value);\n      handleClose();\n    }\n  }\n\n  // Open tag editor for this attribute\n  function handleTag() {\n    handleAddTag(value);\n    handleClose();\n  }\n\n  // Delete this attribute from graph\n  function handleDelete() {\n    deleteAttribute(value);\n    handleClose();\n  }\n\n  const buttonStyle = {\"width\":\"100%\",\n                       \"marginBottom\":\"5px\",\n                       \"color\":colorMap[color].rgb,\n                       \"borderColor\":colorMap[color].rgb,\n                       \"&:hover\": { \"borderColor\":colorMap[color].rgb, \"backgroundColor\": colorMap[color].rgba }};\n  const menuStyle = {}\n\n  return (\n    <div>\n      <Button sx={buttonStyle}\n              onClick={() => addAttribute(value)}\n              onContextMenu={(e) => handleContextMenu(e)}\n              variant=\"outlined\"><a title=\"click to add\">{value}</a></Button>\n      <Menu\n        id=\"basic-menu\"\n        anchorReference=\"anchorPosition\"\n        anchorPosition={anchorPos}\n        style={menuStyle}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuItem onClick={handleTreatment} selected={value===treatment}>Set as Treatment</MenuItem>\n        <MenuItem onClick={handleOutcome} selected={value===outcome}>Set as Outcome</MenuItem>\n        <MenuItem onClick={handleTag}>Edit Tags</MenuItem>\n        <MenuItem onClick={handleDelete}>Delete from Graph</MenuItem>\n      </Menu>\n    </div>\n  )\n}","import React, {useState} from 'react';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { grey, blue, orange } from '@mui/material/colors';\n\nimport { Attribute } from './Attribute';\n\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nexport const AttributesManager = ({attributes=[], added=[], treatment, outcome, addAttribute, deleteAttribute, changeTreatment, changeOutcome, handleAddTag, handleNodeOpen}) => {\n\n  // Get color of attribute\n  function getColor(value) {\n    if (treatment === value) {\n      return \"treatment\"\n    } else if (outcome === value) {\n      return \"outcome\"\n    } else if (added.indexOf(value) >= 0) {\n      return \"black\"\n    } else {\n      return \"grey\"\n    }\n  }\n\n  const buttonStyle = {\"width\":\"100%\", \"marginBottom\":\"5px\", \"width\": \"150px\",};\n  let attrStyle = {\"display\": \"flex\", \"flexDirection\": \"column\", \"width\": \"150px\", \"marginRight\": \"20px\", \"height\": \"500px\", \"overflow\": \"scroll\"};\n\n  return (\n    <div>\n      <Button\n        style={buttonStyle}\n        startIcon={<AddOutlinedIcon />}\n        variant=\"contained\"\n        onClick={() => handleNodeOpen()}><a title=\"click to add\">Add Node</a></Button>\n\n        <div style={attrStyle}>\n\n          {attributes.map((value, index) => {\n            return <Attribute key={index}\n                value={value}\n                isAdded={added.indexOf(value) >= 0 ? true : false}\n                color={getColor(value)}\n                treatment={treatment}\n                outcome={outcome}\n                addAttribute={addAttribute}\n                deleteAttribute={deleteAttribute}\n                changeTreatment={changeTreatment}\n                changeOutcome={changeOutcome}\n                handleAddTag={handleAddTag} />\n          })}\n        </div>\n    </div>\n  )\n}","import React, {useRef, useState, useEffect} from 'react'\nimport * as d3 from 'd3';\n\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport FullscreenExitOutlinedIcon from '@mui/icons-material/FullscreenExitOutlined';\n\n/* Interactive editor for the directed acyclic graph (DAG)\n\nProps:\n  - layout: Object, dimensions of svg\n  - nodelinks: Object, {nodes: [...], links: [...]}\n  - mode: String, \"default\" or \"path\"\n  - treatment: String, treatment variable\n  - outcome: String, outcome variable\n  - mediators: Array, variable names of type String given treatment and outcome\n  - colliders: Array, variable names of type String given treatment and outcome\n  - confounds: Array, variable names of type String given treatment and outcome\n  - search: Array, variables names of type String\n  - updateNodePos: Function, updates position of nodes in nodelink\n  - deleteAttribute: Function, deletes attribute/variable from nodelink\n  - changeTreatment: Function, updates treatment variable\n  - changeOutcome: Function, updates outcome variable\n  - updateLinks: Function, updates/adds links in nodelink\n  - deleteLinks: Function, deletes links in nodelink\n*/       \nexport const DAGEditor = ({layout = {\"height\": 500, \"width\": 1000, \"margin\": 60},\n                           nodelinks = {},\n                           mode = \"default\",\n                           treatment=\"\",\n                           outcome=\"\",\n                           mediators=[],\n                           colliders=[],\n                           confounds=[],\n                           prognostics=[],\n                           search,\n                           updateNodePos,\n                           deleteAttribute,\n                           changeTreatment,\n                           changeOutcome,\n                           updateLinks,\n                           deleteLinks,\n                           _svg}) => {\n\n  // Controls node options menu\n  const [open, setOpen] = React.useState(false);\n  const [anchorPos, setAnchorPos] = React.useState(null);\n  const [contextItem, setContextItem] = React.useState(null);\n\n  // Track selected nodes\n  const [selected, setSelected] = React.useState([]);\n\n  // Track color scheme of nodes\n  const [colorMap, setColorMap] = React.useState({\"treatment\": \"#4e79a7\",\n                                                  \"outcome\": \"#f28e2c\",\n                                                  \"confounds\": \"#e15759\",\n                                                  \"colliders\": \"#76b7b2\",\n                                                  \"mediators\": \"#59a14f\",\n                                                  \"prognostics\": \"#b07AA1\"});\n\n  function handleClose() {\n    setAnchorPos(null);\n    setContextItem(null);\n    setOpen(false);\n  }\n\n  function handleContextMenu(e, d) {\n    e.preventDefault();\n    setAnchorPos({\"left\": e.clientX + 2, \"top\": e.clientY - 6})\n    setOpen(!open);\n    setContextItem(d.name);\n  }\n\n  function handleTreatment() {\n    if (treatment === contextItem) {\n      changeTreatment(\"\");\n      handleClose();\n    } else if (outcome === contextItem) {\n      changeTreatment(contextItem);\n      changeOutcome(\"\");\n      handleClose();\n    } else {\n      changeTreatment(contextItem);\n      handleClose();\n    }\n  }\n\n  function handleOutcome() {\n    if (outcome === contextItem) {\n      changeOutcome(\"\");\n      handleClose();\n    } else if (treatment === contextItem) {\n      changeOutcome(contextItem);\n      changeTreatment(\"\");\n      handleClose();\n    } else {\n      changeOutcome(contextItem);\n      handleClose();\n    }\n  }\n\n  // Delete single Node\n  function handleDelete() {\n    if (selected.length === 0) {\n      deleteAttribute(contextItem);\n      handleClose();\n    }\n  }\n\n  // Add node to selections\n  function handleSelected(nodeName) {\n    let selectedIndex = selected.indexOf(nodeName);\n\n    if (selectedIndex < 0) {\n      setSelected([...selected, nodeName]);\n    } else {\n      selected.splice(selectedIndex, 1)\n      setSelected([...selected]);\n    }\n  }\n\n  // Return true if node name or node tags matches search\n  function isSearched(n) {\n    if (!search) {\n      return false\n    } else if (search === n.name) {\n      return true\n    } else if (search.startsWith(\"tag:\") && n.tags && n.tags.indexOf(search.slice(4)) >= 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // Highlight node that matches search\n  useEffect(() => {\n    if (!search) {\n      node.attr(\"stroke-width\", \"1px\")\n    } else {\n      node.filter(n => isSearched(n))\n        .attr(\"stroke-width\", \"3px\")\n    }\n  }, [search])\n\n  useEffect(() => {\n    for (let m of mediators) {\n      node.filter(d => d.name === m)\n        .attr(\"stroke\", colorMap.mediators)\n\n      text.filter(d => d.name === m)\n        .attr(\"fill\", colorMap.mediators)\n    }\n\n    for (let co of colliders) {\n      node.filter(d => d.name === co)\n        .attr(\"stroke\", colorMap.colliders)\n\n      text.filter(d => d.name === co)\n        .attr(\"fill\", colorMap.colliders)\n    }\n\n    for (let con of confounds) {\n      node.filter(d => d.name === con)\n        .attr(\"stroke\", colorMap.confounds)\n\n      text.filter(d => d.name === con)\n        .attr(\"fill\", colorMap.confounds)\n    }\n\n  }, [mediators, colliders, confounds])\n\n  const ref = useRef('svgDAG');\n\n  let currentPath = [];\n\n  let svg = d3.select(ref.current)\n\n  let svgElement = svg.select(\"g\");\n\n  function zoomed({transform}) {\n    svgElement.attr(\"transform\", transform);\n  }\n\n  const zoom = d3.zoom()\n      .extent([[0, 0], [layout.width, layout.height]])\n      .scaleExtent([0.1, 8])\n      .on(\"zoom\", zoomed);\n\n  svg.call(zoom);\n\n  // Reset zoom on click\n  function resetZoom() {\n    svg.transition()\n      .duration(750)\n      .call(zoom.transform, d3.zoomIdentity);\n  }\n\n  function getAngle(height, width, theta) {\n    let angle;\n\n    if (height < 0 && width < 0) {\n      angle = Math.PI * 2 - theta;\n    } else if (height < 0 && width > 0) {\n      angle = Math.PI + theta;\n    } else if (height > 0 && width > 0) {\n      angle = Math.PI - theta;\n    } else if (height === 0 && width < 0) {\n      angle = 0;\n    } else if (height === 0 && width > 0) {\n      angle = Math.PI;\n    } else if (height > 0 && width === 0) {\n      angle = Math.PI / 2;\n    } else if (height < 0 && width === 0) {\n      angle = Math.PI / 2 * 3;\n    } else {\n      angle = theta;\n    }\n\n    return angle;\n  }\n\n  var arrowleft = svgElement\n    .select(\"#links\")\n    .selectAll(\".arrowleft\")\n    .data(nodelinks.links)\n    .join(\"line\")\n      .attr(\"class\", \"arrowleft\")\n      .attr(\"x1\", d => (d.target.x - d.source.x) / 2 + d.source.x)\n      .attr(\"y1\", d => (d.target.y - d.source.y) / 2 + d.source.y)\n      .attr(\"x2\", d => {\n        let height = d.target.y - d.source.y;\n        let width = d.target.x - d.source.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.x - d.source.x) / 2 + d.source.x + 10 * Math.cos(angle + Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (d.target.y - d.source.y)\n        let width = (d.target.x - d.source.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.y - d.source.y) / 2 + d.source.y - 10 * Math.sin(angle + Math.PI/5)\n      })\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 1);\n\n  var arrowright = svgElement\n    .select(\"#links\")\n    .selectAll(\".arrowright\")\n    .data(nodelinks.links)\n    .join(\"line\")\n      .attr(\"class\", \"arrowright\")\n      .attr(\"x1\", d => (d.target.x - d.source.x) / 2 + d.source.x)\n      .attr(\"y1\", d => (d.target.y - d.source.y) / 2 + d.source.y)\n      .attr(\"x2\", d => {\n        let height = d.target.y - d.source.y;\n        let width = d.target.x - d.source.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.x - d.source.x) / 2 + d.source.x + 10 * Math.cos(angle - Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (d.target.y - d.source.y)\n        let width = (d.target.x - d.source.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.y - d.source.y) / 2 + d.source.y - 10 * Math.sin(angle - Math.PI/5)\n      })\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 1);\n\n  function onDrag(el, e, d) {\n\n    // Change position of node\n    d3.select(el).attr(\"cx\", e.x).attr(\"cy\", e.y);\n\n    // Change position of text\n    text.filter(l => l.id === d.id).attr(\"x\", e.x).attr(\"y\", e.y);\n\n    // Update endpoints of links\n    link.filter(l => l.source.id === d.id).attr(\"x1\", e.x).attr(\"y1\", e.y);\n    link.filter(l => l.target.id === d.id).attr(\"x2\", e.x).attr(\"y2\", e.y);\n\n    // Update endpoints of direction arrows\n    arrowleft.filter(l => l.target.id === d.id)\n      .attr(\"x1\", d => (e.x - d.source.x) / 2 + d.source.x)\n      .attr(\"y1\", d => (e.y - d.source.y) / 2 + d.source.y)\n      .attr(\"x2\", d => {\n        let height = e.y - d.source.y;\n        let width = e.x - d.source.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (e.x - d.source.x) / 2 + d.source.x + 10 * Math.cos(angle + Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (e.y - d.source.y)\n        let width = (e.x - d.source.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (e.y - d.source.y) / 2 + d.source.y - 10 * Math.sin(angle + Math.PI/5)\n      })\n\n    arrowleft.filter(l => l.source.id === d.id)\n      .attr(\"x1\", d => (d.target.x - e.x) / 2 + e.x)\n      .attr(\"y1\", d => (d.target.y - e.y) / 2 + e.y)\n      .attr(\"x2\", d => {\n        let height = d.target.y - e.y;\n        let width = d.target.x - e.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.x - e.x) / 2 + e.x + 10 * Math.cos(angle + Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (d.target.y - e.y)\n        let width = (d.target.x - e.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.y - e.y) / 2 + e.y - 10 * Math.sin(angle + Math.PI/5)\n      })\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 1);\n\n    arrowright.filter(l => l.target.id === d.id)\n      .attr(\"x1\", d => (e.x - d.source.x) / 2 + d.source.x)\n      .attr(\"y1\", d => (e.y - d.source.y) / 2 + d.source.y)\n      .attr(\"x2\", d => {\n        let height = e.y - d.source.y;\n        let width = e.x - d.source.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (e.x - d.source.x) / 2 + d.source.x + 10 * Math.cos(angle - Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (e.y - d.source.y)\n        let width = (e.x - d.source.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (e.y - d.source.y) / 2 + d.source.y - 10 * Math.sin(angle - Math.PI/5)\n      })\n\n      arrowright.filter(l => l.source.id === d.id)\n      .attr(\"x1\", d => (d.target.x - e.x) / 2 + e.x)\n      .attr(\"y1\", d => (d.target.y - e.y) / 2 + e.y)\n      .attr(\"x2\", d => {\n        let height = d.target.y - e.y;\n        let width = d.target.x - e.x;\n\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.x - e.x) / 2 + e.x + 10 * Math.cos(angle - Math.PI/5)\n      })\n      .attr(\"y2\", d => {\n        let height = (d.target.y - e.y)\n        let width = (d.target.x - e.x)\n        let theta = Math.atan(Math.abs(height/width));\n        let angle = getAngle(height, width, theta);\n\n        return (d.target.y - e.y) / 2 + e.y - 10 * Math.sin(angle - Math.PI/5)\n      })\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 1);\n  }\n\n  // Determine node color\n  function nodeColor(d) {\n    if (d.name === treatment) {\n      return colorMap.treatment\n    } else if (d.name === outcome) {\n      return colorMap.outcome\n    } else if (mediators.indexOf(d.name) >= 0) {\n      return colorMap.mediators\n    } else if (colliders.indexOf(d.name) >= 0) {\n      return colorMap.colliders\n    } else if (confounds.indexOf(d.name) >= 0) {\n      return colorMap.confounds\n    } else if (prognostics.indexOf(d.name) >= 0) {\n      return colorMap.prognostics\n    }\n\n    return \"black\"\n  }\n\n  var text = svgElement\n    .select(\"#nodeNames\")\n    .selectAll(\".nodeName\")\n    .data(nodelinks.nodes)\n    .join(\"text\")\n    .attr(\"class\", \"nodeName\")\n    .text(d => d.name)\n    .attr(\"x\", d => d.x)\n    .attr(\"y\", d => d.y)\n    .attr(\"fill\", d => nodeColor(d))\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"alignment-baseline\", \"middle\")\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"12px\")\n\n  // Each line represents a link between attributes\n  var link = svgElement\n    .select(\"#links\")\n    .selectAll(\".link\")\n    .data(nodelinks.links)\n    .join(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"x1\", d => d.source.x)\n      .attr(\"y1\", d => d.source.y)\n      .attr(\"x2\", d => d.target.x)\n      .attr(\"y2\", d => d.target.y)\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 1)\n      .on(\"mouseover\", function () {\n        if (mode === \"path\") {\n          d3.select(this).attr(\"stroke-width\", 3);\n        }\n      })\n      .on(\"mouseout\", function () {\n        if (mode === \"path\") {\n          d3.select(this).attr(\"stroke\", \"black\").attr(\"stroke-width\", 1);\n        }\n      })\n      .on(\"click\", function(e, d) {\n        if (mode === \"path\") {\n          deleteLinks(d);\n        }\n      });\n\n  function getStrokeWidth(d) {\n    if (selected.indexOf(d.name) >= 0) {\n      return 3\n    } else if (isSearched(d)) {\n      return 3\n    } else {\n      return 1\n    }\n  }\n\n  // Each ellipse represents an attribute\n  var node = svgElement\n    .select(\"#nodes\")\n    .selectAll(\".node\")\n    .data(nodelinks.nodes)\n    .join(\"ellipse\")\n      .attr(\"class\", \"node\")\n      .attr(\"rx\", 50)\n      .attr(\"ry\", 20)\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => d.y)\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", d => nodeColor(d))\n      .attr(\"stroke-width\", d => getStrokeWidth(d))\n      .attr(\"stroke-dasharray\", d => d[\"$custom\"] ? \"5 5 2 5\" : \"none\")\n      .attr(\"cursor\", \"pointer\")\n      .call(d3.drag()\n        .on(\"start\", function(e, d) {\n        })\n        .on(\"drag\", function (e, d) {\n\n          if (mode === \"default\") {\n            // Adjust the position of a node\n            onDrag(this, e, d);\n          }\n\n        })\n        .on(\"end\", function (e, d) {\n\n          // Update the new position of the node\n          if (mode === \"default\") {\n            updateNodePos(d.id, e.x, e.y);\n          }\n\n        })\n      )\n      .on(\"click\", function (e, d) {\n\n        e.stopPropagation();\n\n        if (mode === \"path\") {\n\n          // Remove node if previously selected\n          if (currentPath.length === 1 && d.id === currentPath[0].id) {\n            d3.select(this).attr(\"stroke-width\", 1);\n            currentPath = [];\n            return;\n          }\n\n          currentPath.push(d);\n          d3.select(this).attr(\"stroke-width\", 3);\n\n          if (currentPath.length === 2) {\n            updateLinks(currentPath);\n            currentPath = [];\n          }\n        }\n      })\n      .on(\"mouseover\", function (e, d) {\n        if (mode === \"path\") {\n          d3.select(this).attr(\"stroke-width\", 3);\n        }\n      })\n      .on(\"mouseout\", function (e, d) {\n\n        if (mode === \"path\" && currentPath.map(cp => cp.name).indexOf(d.name) < 0 && d.name !== search) {\n          d3.select(this).attr(\"stroke-width\", 1);\n        } else if (mode === \"default\" && !isSearched(d)) {\n          d3.select(this).attr(\"stroke-width\", 1);\n        }\n      })\n\n  const covariateTypes = [\"treatment\", \"outcome\", \"confounds\", \"colliders\", \"mediators\", \"prognostics\"];\n\n  var legend = svg.select(\"#legend\")\n    .selectAll(\".legendRect\")\n    .data(covariateTypes)\n    .join(\"rect\")\n    .attr(\"class\", \"legendRect\")\n    .attr(\"x\", layout.width - layout.margin * 2)\n    .attr(\"y\", (d, i) => layout.height - layout.margin * 2 + 18 * i)\n    .attr(\"width\", 15)\n    .attr(\"height\", 15)\n    .attr(\"fill\", d => colorMap[d])\n\n  var legendText = svg.select(\"#legend\")\n    .selectAll(\".legendText\")\n    .data(covariateTypes)\n    .join(\"text\")\n    .attr(\"class\", \"legendText\")\n    .attr(\"x\", layout.width - layout.margin * 2 + 18)\n    .attr(\"y\", (d, i) => layout.height - layout.margin * 2 + 18 * i + 9)\n    .attr(\"alignment-baseline\", \"middle\")\n    .attr(\"text-anchor\", \"start\")\n    .attr(\"fill\", d => colorMap[d])\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", \"12px\")\n    .text(d => d)\n\n  const menuStyle = {};\n  let aStyle = {\"height\":\"24px\"};\n\n  return (\n    <div>\n      <Menu\n        id=\"basic-menu\"\n        anchorReference=\"anchorPosition\"\n        anchorPosition={anchorPos}\n        style={menuStyle}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuItem onClick={handleTreatment} selected={contextItem===treatment}>Set as Treatment</MenuItem>\n        <MenuItem onClick={handleOutcome} selected={contextItem===outcome}>Set as Outcome</MenuItem>\n        <MenuItem onClick={handleDelete}>Delete from Graph</MenuItem>\n      </Menu>\n      <IconButton id=\"fitScreen\" onClick={() => resetZoom()}>\n        <a style={aStyle} title=\"reset zoom\">\n          <FullscreenExitOutlinedIcon />\n        </a>\n      </IconButton>\n      <svg width={layout.width} height={layout.height} ref={ref} id={_svg}>\n        <g>\n          <g id=\"links\" />\n          <g id=\"nodes\" />\n          <g id=\"nodeNames\" />\n        </g>\n        <g id=\"legend\" />\n      </svg>\n    </div>\n  )\n}","import React, {useEffect} from 'react';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\n\nimport { saveAs } from 'file-saver';\n\nexport const DownloadDialog = ({open=false, nodelinks={}, treatment=\"\", outcome=\"\", confounds=[], colliders=[], mediators=[], prognostics=[], handleClose}) => {\n  const [checked, setChecked] = React.useState({\n    nodelinkCheck: true,\n    treatmentCheck: false,\n    outcomeCheck: false,\n    confoundsCheck: false,\n    mediatorsCheck: false,\n    collidersCheck: false,\n    prognosticsCheck: false\n  });\n  const [error, setError] = React.useState(false);\n  const [downloadJSON, setJSON] = React.useState('');\n  const [filename, setFilename] = React.useState('DAG');\n\n  // Update download json based on user selections\n  useEffect(() => {\n    let newDownload = {};\n    \n    if (checked.nodelinkCheck) {\n      newDownload.nodes = JSON.parse(JSON.stringify(nodelinks.nodes));\n\n      for (let n of newDownload.nodes) {\n        delete n.children;\n        delete n.parents;\n      }\n\n      newDownload.links = JSON.parse(JSON.stringify(nodelinks.links));\n    }\n\n    if (checked.treatmentCheck) {\n      newDownload.treatment = treatment;\n    }\n\n    if (checked.outcomeCheck) {\n      newDownload.outcome = outcome;\n    }\n\n    if (checked.confoundsCheck) {\n      newDownload.confounds = confounds;\n    }\n\n    if (checked.mediatorsCheck) {\n      newDownload.mediators = mediators;\n    }\n\n    if (checked.collidersCheck) {\n      newDownload.colliders = colliders;\n    }\n\n    if (checked.prognosticsCheck) {\n      newDownload.prognostics = prognostics;\n    }\n\n    setJSON(newDownload);\n\n  }, [checked, nodelinks, treatment, outcome, confounds, colliders, mediators, prognostics])\n\n\n  function handleChange(val) {\n    checked[val] = !checked[val];\n    let checkedValues = Object.values(checked);\n    let newError = checkedValues.filter((v) => v).length < 1;\n\n    setChecked({...checked});\n    setError(newError);\n  }\n\n  function download() {\n    let fileContent = new Blob([JSON.stringify(downloadJSON, null, 4)], {\n      type: 'application/json',\n      name: `${filename}.json`\n    });\n\n    saveAs(fileContent, `${filename}.json`);\n  }\n\n  function handleFilenameChange(e) {\n    setFilename(e.target.value);\n  }\n\n  let dataStyle = {\"display\": \"flex\"};\n  let checkboxStyle = {\"width\": \"250px\"};\n  let textStyle = {\"margin\": \"24px 24px 0px 0px\"};\n  let filenameStyle = {\"marginBottom\": \"24px\"};\n  let fullWidth = true;\n  let maxWidth = \"md\";\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}>\n        <DialogTitle>Download</DialogTitle>\n        <DialogContent>\n          <TextField\n            style={filenameStyle}\n            defaultValue={filename}\n            id=\"outlined-basic\"\n            label=\"Filename\"\n            variant=\"standard\"\n            onChange={(e) => handleFilenameChange(e)} />\n          <DialogContentText>\n            Select the data you would like to include. Your file will be saved as <i>{filename}.json</i>.\n          </DialogContentText>\n          <div style={dataStyle}>\n            <FormControl\n              required\n              error={error}\n              component=\"fieldset\"\n              sx={{ m: 3 }}\n              variant=\"standard\">\n              <FormLabel component=\"legend\">Select at least one</FormLabel>\n              <FormGroup style={checkboxStyle}>\n                <FormControlLabel control={<Checkbox checked={checked.nodelinkCheck} onChange={() => handleChange(\"nodelinkCheck\")} />} label=\"Node-Link\" />\n                <FormControlLabel control={<Checkbox checked={checked.treatmentCheck} onChange={() => handleChange(\"treatmentCheck\")} />} label=\"Treatment\" />\n                <FormControlLabel control={<Checkbox checked={checked.outcomeCheck} onChange={() => handleChange(\"outcomeCheck\")} />} label=\"Outcome\" />\n                <FormControlLabel control={<Checkbox checked={checked.confoundsCheck} onChange={() => handleChange(\"confoundsCheck\")} />} label=\"Confounds\" />\n                <FormControlLabel control={<Checkbox checked={checked.mediatorsCheck} onChange={() => handleChange(\"mediatorsCheck\")} />} label=\"Mediators\" />\n                <FormControlLabel control={<Checkbox checked={checked.collidersCheck} onChange={() => handleChange(\"collidersCheck\")} />} label=\"Colliders\" />\n                <FormControlLabel control={<Checkbox checked={checked.prognosticsCheck} onChange={() => handleChange(\"prognosticsCheck\")} />} label=\"Prognostics\" />\n              </FormGroup>\n            </FormControl>\n            <TextField\n              style={textStyle}\n              id=\"outlined-multiline-flexible\"\n              multiline\n              fullWidth\n              maxRows={20}\n              value={JSON.stringify(downloadJSON, null, 4)}\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={download}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { SwatchesPicker } from 'react-color';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\n\n// import { saveAs } from 'file-saver';\n\nexport const TagDialog = ({tagNode=\"\", tagColors={}, attrTags=[], open=false, handleTagClose, updateTag, deleteTag}) => {\n  const [value, setValue] = React.useState(\"\");\n  const [colorOpen, setColorOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"#000000\");\n\n  // Handle when users select a tag from existing tags;\n  function handleChange(e, val) {\n    setValue(val);\n    setColor(tagColors[val]);\n  }\n\n  // Handle when users add a new tag;\n  function handleInputChange(e) {\n    // console.log(e.target.value);\n    setValue(e.target.value);\n  };\n\n  // Toggle open/close color selector\n  const handleClick = () => {\n    setColorOpen(!colorOpen);\n  };\n\n  // Close color selector\n  const handleClose = () => {\n    setColorOpen(false);\n  };\n\n  // Update color selected\n  const handleColorChange = (color) => {\n    setColor(color.hex);\n  };\n\n  // Add tag and associated color\n  const handleAdd = () => {\n    if (value === \"\") {\n      // handleTagClose();\n    } else {\n      updateTag(color, value);\n      // handleTagClose();\n    }\n\n    setColor(\"#000000\");\n  };\n\n  // Delete tag for selected attribute\n  const handleDelete = (value) => {\n    deleteTag(value);\n  }\n\n  const styles = {\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n  };\n\n  let textStyle = {\"margin\": \"24px 10px 0px 0px\", \"width\": \"300px\"};\n  let dialogContentStyle = {\"display\":\"flex\", \"alignItems\":\"center\"};\n  let swatchStyle = {\"margin\": \"24px 24px 0px 0px\",\n                    \"width\":\"48px\",\n                    \"height\":\"48px\",\n                    \"padding\":\"4px\",\n                    \"background\": '#fff',\n                    \"borderRadius\": '4px',\n                    \"boxShadow\": '0 0 0 1px rgba(0,0,0,.1)',\n                    \"display\": 'inline-block',\n                    \"cursor\": 'pointer',};\n  let colorStyle = {\"width\":\"100%\",\n                    \"height\":\"100%\",\n                    \"borderRadius\": '4px',\n                    \"background\": `${ color }`};\n  let popoverStyle = {position: 'fixed',\n                      zIndex: '1301'};\n  let stackStyle = {\"display\": attrTags.length > 0 ? \"block\" : \"none\", \"margin\": \"24px 10px 0px 0px\"};\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleTagClose}>\n        <DialogTitle>Add or Edit Tags</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n          You are editing tags for the node: <i>{tagNode}</i>\n          </DialogContentText>\n          <Stack style={stackStyle} direction=\"row\" spacing={1}>\n            {attrTags.map((value, index) => {\n              return <Chip label={value} variant=\"outlined\" onDelete={() => handleDelete(value)} sx={{\"color\": tagColors[value]}}/>\n            })}\n          </Stack>\n          <div style={dialogContentStyle}>\n            <Autocomplete\n              disablePortal\n              freeSolo\n              options={Object.keys(tagColors)}\n              sx={textStyle}\n              onChange={(e, val) => handleChange(e, val)}\n              onInputChange={(e) => handleInputChange(e)}\n              renderInput={(params) =>\n                <TextField\n                  {...params}\n                  label=\"Tag Name\"\n                />}\n            />\n\n            <div style={ swatchStyle } onClick={ handleClick }>\n              <div style={ colorStyle } />\n              { colorOpen ? <div style={ popoverStyle }>\n                <div style={ styles.cover } onClick={ handleClose }/>\n                <SwatchesPicker color={ color } onChange={ handleColorChange } />\n              </div> : null }\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleTagClose}>Close</Button>\n          <Button onClick={handleAdd}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\n\nexport const NodeDialog = ({open=false, handleNodeClose, addAttribute, addCustom}) => {\n  const [value, setValue] = React.useState(\"\");\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  // Add node with input attribute name\n  function handleAdd() {\n    if (value === \"\") {\n      handleNodeClose();\n    } else {\n      addCustom(value);\n      setValue(\"\");\n      handleNodeClose();\n    }\n  }\n\n  let textStyle = {\"margin\": \"24px 24px 0px 0px\"};\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleNodeClose}>\n        <DialogContent>\n          <DialogContentText>\n          Add Custom Node\n          </DialogContentText>\n          <TextField\n            style={textStyle}\n            id=\"outlined-basic\"\n            label=\"Variable Name\"\n            variant=\"outlined\"\n            onChange={(e) => handleChange(e)} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleNodeClose}>Cancel</Button>\n          <Button onClick={handleAdd}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { grey, blue, orange } from '@mui/material/colors';\n\nimport { select } from 'd3-selection';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\n\nimport { AttributesManager } from './CausalStructure/AttributesManager';\nimport { DAGEditor } from './CausalStructure/DAGEditor';\nimport { DownloadDialog } from './CausalStructure/DownloadDialog';\nimport { TagDialog } from './CausalStructure/TagDialog'\nimport { NodeDialog } from './CausalStructure/NodeDialog';\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport FormControl from '@mui/material/FormControl';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport ControlPointDuplicateOutlinedIcon from '@mui/icons-material/ControlPointDuplicateOutlined';\nimport FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';\nimport LinearScaleRoundedIcon from '@mui/icons-material/LinearScaleRounded';\nimport NearMeOutlinedIcon from '@mui/icons-material/NearMeOutlined';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { saveAs } from 'file-saver';\n\nexport const DAG = ({attributes = [], graph, _svg=\"svgDAG\", _dag, _colliders, _mediators, _confounds, _prognostics}) => {\n\n  // Tracks nodes and links in DAG\n  const [nodelinks, setnodelinks] = React.useState({\"nodes\": [], \"links\":[]});\n\n  // Tracks current editor mode\n  const [mode, setMode] = React.useState('default');\n\n  // Controls whether download dialog is open\n  const [open, setOpen] = React.useState(false);\n\n  // Controls whether add node dialog is open\n  const [addNode, setAddNode] = React.useState(false);\n\n  // Controls whether add tag dialog is open\n  const [addTag, setAddTag] = React.useState(false);\n  const [tagNode, setTagNode] = React.useState();\n  const [tagColors, setTagColors] = React.useState({});\n\n  // Tracks search item\n  const [search, setSearch] = React.useState(\"\");\n\n  // Tracks colliders, mediators, confounds, and prognostic factors in DAG\n  const [colliders, setColliders] = React.useState([]);\n  const [mediators, setMediators] = React.useState([]);\n  const [confounds, setConfounds] = React.useState([]);\n  const [prognostics, setPrognostics] = React.useState([]);\n\n  // Track attributes\n  const [allAttributes, setAllAttributes] = React.useState({});\n  // Tracks attributes added to DAG\n  const [added, setAdded] = React.useState([]);\n\n  // Tracks treatment and outcome attributes\n  const [treatment, setTreatment] = React.useState(\"\");\n  const [outcome, setOutcome] = React.useState(\"\");\n\n  // Tracks all descendants for a node\n  const [allDescendants, setAllDescendants] = React.useState({});\n\n  // All IDs used\n  const [ID, setID] = React.useState(new Set());\n\n  const layout = {\"height\": 500, \"width\": 1000, \"margin\": 60};\n\n  function generateID() {\n    return (new Date()).getTime() + Math.floor(Math.random() * 98);\n  }\n\n  function loadGraph(graph) {\n\n    var xScale = scaleLinear()\n          .domain(extent(graph.nodes, d => d.x))\n          .range([layout.margin, layout.width - layout.margin])\n\n    var yScale = scaleLinear()\n          .domain(extent(graph.nodes, d => d.y))\n          .range([layout.margin, layout.height - layout.margin])\n\n    let newnodelinks = JSON.parse(JSON.stringify(graph));\n\n    let nodes = newnodelinks.nodes;\n    let links = newnodelinks.links;\n\n    let newID = new Set();\n    let newAllAttributes = {};\n\n    for (let n of nodes) {\n      if (!n.id) {\n        let id = generateID();\n\n        while (newID.has(id)) {\n          id = generateID();\n        }\n\n        n.id = id;\n      }\n\n      newID.add(n.id);\n\n      n.x = xScale(n.x);\n      n.y = yScale(n.y);\n      n.children = new Set();\n      n.parents = new Set();\n\n      newAllAttributes[n.name] = {\"$custom\": false, \"tags\": []};\n    }\n\n    setID(newID);\n    setAllAttributes(newAllAttributes);\n    setAdded(Object.keys(newAllAttributes));\n\n    for (let l of links) {\n      let s = l.source.name ? l.source.name : l.source;\n      let t = l.target.name ? l.target.name : l.target;\n\n      let sourceNode = nodes.filter(n => n.name === s)[0];\n      let targetNode = nodes.filter(n => n.name === t)[0];\n\n      sourceNode.children.add(targetNode.id);\n      targetNode.parents.add(sourceNode.id);\n\n      l.source = {...nodes.filter(n => n.name === s)[0]};\n      l.target = {...nodes.filter(n => n.name === t)[0]};\n\n      delete l.source.children;\n      delete l.source.parents;\n\n      delete l.target.children;\n      delete l.target.parents;\n    }\n\n    return newnodelinks\n  }\n\n  useEffect(() => {\n    if (graph) {\n      let newnodelinks = loadGraph(graph);\n      setnodelinks(newnodelinks);\n\n      let hidden = document.getElementById(_dag);\n      let nodelink_string = JSON.stringify(newnodelinks);\n\n      if (hidden) {\n        hidden.value = nodelink_string;\n        var event = document.createEvent('HTMLEvents');\n        event.initEvent('input', false, true);\n        hidden.dispatchEvent(event);\n      }\n    }\n  }, [graph]);\n\n  // If attributes are provided without an accompanying graph set attributes only\n  useEffect(() => {\n    if (attributes && attributes.length > 0 && !graph) {\n      let newAllAttributes = {}\n      for (let a of attributes) {\n        newAllAttributes[a] = {\"$custom\": false, \"tags\": []}\n      }\n\n      setAllAttributes(newAllAttributes);\n    }\n  }, [attributes]);\n\n  function updateJupyter(jdag, jcolliders, jmediators, jconfounds, jprognostics) {\n    let hidden = document.getElementById(_dag);\n    let nodelinks_string = JSON.stringify(jdag);\n\n    let jupyter_colliders = document.getElementById(_colliders);\n    let jupyter_mediators = document.getElementById(_mediators);\n    let jupyter_confounds = document.getElementById(_confounds);\n    let jupyter_prognostics = document.getElementById(_prognostics);\n\n    if (hidden) {\n      hidden.value = nodelinks_string;\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('input', false, true);\n      hidden.dispatchEvent(event);\n    }\n\n    if (jupyter_colliders) {\n      jupyter_colliders.value = JSON.stringify(jcolliders);\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('input', false, true);\n      jupyter_colliders.dispatchEvent(event);\n    }\n\n    if (jupyter_mediators) {\n      jupyter_mediators.value = JSON.stringify(jmediators);\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('input', false, true);\n      jupyter_mediators.dispatchEvent(event);\n    }\n\n    if (jupyter_confounds) {\n      jupyter_confounds.value = JSON.stringify(jconfounds);\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('input', false, true);\n      jupyter_confounds.dispatchEvent(event);\n    }\n\n    if (jupyter_prognostics) {\n      jupyter_prognostics.value = JSON.stringify(jprognostics);\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent('input', false, true);\n      jupyter_prognostics.dispatchEvent(event);\n    }\n  }\n\n  // When treatment and outcome variables are changed\n  // Or when the graph is updated\n  // Recalculate mediators, colliders, and confounds\n  useEffect(() => {\n\n    // Check that both treatment and outcome have been indicated\n    if (treatment.length > 0 && outcome.length > 0) {\n      let newColliders = Array.from(getColliders(treatment, outcome));\n      let colliderNames = [];\n\n      for (let c of newColliders) {\n        colliderNames.push(nodelinks.nodes.filter(n => n.id === c)[0].name);\n      }\n\n      let newMediators = Array.from(getMediators(treatment, outcome));\n      let newConfounds = getConfounds(treatment, outcome);\n      let newPrognostics = getPrognostics(treatment, outcome, newMediators.map(m => m.id), newConfounds.map(c => c.id));\n\n      setColliders(colliderNames);\n      setMediators(newMediators.map(m => m.name));\n      setConfounds(newConfounds.map(c => c.name));\n      setPrognostics(newPrognostics.map(p => p.name));\n\n      updateJupyter(nodelinks, colliderNames, newMediators, newConfounds, newPrognostics);\n      \n    } else {\n      // If either treatment or outcome is missing,\n      // Set all variable types to empty\n      setColliders([]);\n      setMediators([]);\n      setConfounds([]);\n      setPrognostics([]);\n\n      updateJupyter(nodelinks, [], [], [], []);\n\n    }\n  }, [treatment, outcome, nodelinks]);\n\n  // Add new attribute to the DAG\n  function addAttribute(val, custom=false, x=layout.width/2, y=layout.height/2) {\n\n    let index = added.indexOf(val);\n\n    if (index < 0) {\n      const id = generateID();\n      const newnodelinks = {\"nodes\": [...nodelinks.nodes, {\"x\": x,\n                                                          \"y\": y,\n                                                          \"id\": id,\n                                                          \"name\": val,\n                                                          \"parents\": new Set(),\n                                                          \"children\": new Set(),\n                                                          \"$custom\": allAttributes[val] ? allAttributes[val][\"$custom\"] : custom,\n                                                          \"tags\": allAttributes[val] ? allAttributes[val][\"tags\"] : []}],\n                            \"links\": [...nodelinks.links]};\n      \n      setnodelinks(newnodelinks);\n      setAdded([...added, val]);\n    }\n  }\n\n  function addCustom(val) {\n    let newAllAttributes = JSON.parse(JSON.stringify(allAttributes));\n    newAllAttributes[val] = {\"$custom\": true, \"tags\": []};\n    setAllAttributes(newAllAttributes);\n    \n    addAttribute(val, true);\n  }\n\n  // Delete an attribute from the DAG\n  function deleteAttribute(val) {\n    let index = added.indexOf(val);\n\n    added.splice(index, 1);\n    setAdded([...added]);\n\n    let newNodes = nodelinks.nodes.filter(n => n.name !== val);\n    let newLinks = nodelinks.links.filter(l => l.target.name !== val && l.source.name !== val);\n\n    setnodelinks({\"nodes\": [...newNodes], \"links\": [...newLinks]});\n\n    // If deleted attribute is treatment, set treatment to null\n    if (val === treatment) {\n      setTreatment(\"\");\n    }\n\n    // If deleted attribute is outcome, set outcome to null\n    if (val === outcome) {\n      setOutcome(\"\");\n    }\n  }\n\n  // Set an attribute as the treatment of interest\n  function changeTreatment(attribute) {\n    setTreatment(attribute);\n  }\n\n  // Set an attribute as the outcome of interest\n  function changeOutcome(attribute) {\n    setOutcome(attribute);\n  }\n\n  // Set search item\n  function changeSearch(e, val) {\n    setSearch(val);\n  }\n\n  // Update tags for an attribute\n  function updateTag(color, tagName) {\n    // If attribute already has a tag, do not add the tag again\n    if (allAttributes[tagNode][\"tags\"] && allAttributes[tagNode][\"tags\"].indexOf(tagName) >= 0) {\n      return;\n    }\n\n    // Update nodelink diagram\n    let newnodelinks = { ...nodelinks };\n    let taggingNode = newnodelinks.nodes.filter(n => n.name === tagNode)[0];\n    if (!taggingNode.tags) {\n      taggingNode.tags = [tagName];\n    } else {\n      taggingNode.tags.push(tagName);\n    }\n\n    setnodelinks(newnodelinks);\n\n    // Update attributes\n    let newAllAttributes = JSON.parse(JSON.stringify(allAttributes));\n    newAllAttributes[tagNode][\"tags\"].push(tagName);\n    setAllAttributes(newAllAttributes);\n\n    // Update dictionary of tag colors\n    tagColors[tagName] = color;\n    setTagColors({...tagColors});\n  }\n\n  // Delete tags for an attribute\n  function deleteTag(tagName) {\n    // Update nodelink diagram\n    let newnodelinks = { ...nodelinks };\n    let taggingNode = newnodelinks.nodes.filter(n => n.name === tagNode)[0];\n\n    let tagIndex = taggingNode.tags.indexOf(tagName);\n    taggingNode.tags.splice(tagIndex, 1);\n\n    setnodelinks(newnodelinks);\n\n    // Update attributes\n    let newAllAttributes = JSON.parse(JSON.stringify(allAttributes));\n    tagIndex = newAllAttributes[tagNode][\"tags\"].indexOf(tagName);\n    newAllAttributes[tagNode][\"tags\"].splice(tagIndex, 1);\n    setAllAttributes(newAllAttributes);\n  }\n\n  // Update node position after dragging\n  function updateNodePos(id, newX, newY) {\n    let newnodelinks = { ...nodelinks };\n    for (let n of newnodelinks.nodes) {\n      if (n.id === id) {\n        n.x = newX;\n        n.y = newY;\n        break;\n      }\n    }\n\n    for (let l of newnodelinks.links) {\n      if (l.source.id === id) {\n        l.source.x = newX;\n        l.source.y = newY;\n      }\n\n      if (l.target.id === id) {\n        l.target.x = newX;\n        l.target.y = newY;\n      }\n    }\n\n    setnodelinks(newnodelinks);\n  }\n\n  // Returns true of acyclic\n  function checkAcyclic(source, target) {\n    let targetDesc = new Set(getDescendents(target));\n\n    if (targetDesc.has(source.id)) {\n      alert(\"This link cannot be added. The DAG must be acyclic.\");\n      return false\n    } else {\n      return true\n    }\n  }\n\n  // Add new links between nodes\n  function updateLinks(newLink) {\n\n    // Ensure that there is only one link between any 2 nodes\n    for (let l of nodelinks.links) {\n      if ((l.source.id === newLink[0].id && l.target.id === newLink[1].id) || (l.target.id === newLink[0].id && l.source.id === newLink[1].id)) {\n        return;\n      }\n    }\n\n    if (!checkAcyclic(newLink[0], newLink[1])) {\n      return;\n    }\n\n    // Update parent and child relationships\n    for (let n of nodelinks.nodes) {\n      if (n.id === newLink[0].id) {\n        n.children.add(newLink[1].id)\n      } else if (n.id === newLink[1].id) {\n        n.parents.add(newLink[0].id)\n      }\n    }\n\n    let newLinkCopy = JSON.parse(JSON.stringify(newLink));\n\n    delete newLinkCopy[0].parents;\n    delete newLinkCopy[0].children;\n\n    delete newLinkCopy[1].parents;\n    delete newLinkCopy[1].children;\n\n    const newnodelinks = {\"nodes\": [...nodelinks.nodes], \"links\": [...nodelinks.links, {\"source\": newLinkCopy[0], \"target\": newLinkCopy[1]}]};\n    setnodelinks(newnodelinks);\n  }\n\n  // Delete links between nodes\n  function deleteLinks(link) {\n\n    const newlinks = nodelinks.links.filter(l => !(l.source.id === link.source.id && l.target.id === link.target.id))\n\n    // Update parent and child relationships\n    for (let n of nodelinks.nodes) {\n      if (n.id === link.source.id) {\n        n.children.delete(link.target.id)\n      } else if (n.id === link.target.id) {\n        n.parents.delete(link.source.id)\n      }\n    }\n\n    const newnodelinks = {\"nodes\": [...nodelinks.nodes], \"links\": [...newlinks]};\n    setnodelinks(newnodelinks)\n  }\n\n  // Switch between layout and path editor\n  function toggleMode(e, val) {\n    setMode(val);\n  }\n\n  // Open and close download dialog\n  const handleClickOpen = () => {\n    let newColliders = getColliders(treatment, outcome);\n    let colliderNames = []\n\n    for (let c of newColliders) {\n      colliderNames.push(nodelinks.nodes.filter(n => n.id === c)[0].name)\n    }\n\n    let newMediators = Array.from(getMediators(treatment, outcome));\n    let newConfounds = getConfounds(treatment, outcome);\n    let newPrognostics = getPrognostics(treatment, outcome, newMediators.map(m => m.id), newConfounds.map(c => c.id));\n\n    setColliders(colliderNames);\n    setMediators(newMediators.map(m => m.name));\n    setConfounds(newConfounds.map(c => c.name));\n    setPrognostics(newPrognostics.map(p => p.name));\n\n    setOpen(true);\n  };\n\n  // Close download dialog\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Open and close node add dialog\n  const handleNodeOpen = () => {\n    setAddNode(true);\n  };\n\n  // Close add node dialog\n  const handleNodeClose = () => {\n    setAddNode(false);\n  };\n\n  // Open and close tag add dialog\n  const handleTagOpen = () => {\n    setAddTag(true);\n  };\n\n  // Close add tag dialog\n  const handleTagClose = () => {\n    setAddTag(false);\n  };\n\n  const handleAddTag = (value) => {\n    setTagNode(value);\n    handleTagOpen();\n  }\n\n  // Download DAG as PNG image\n  function downloadSVG() {\n    let svgElement = select(`#${_svg}`);\n    var svgString = getSVGString(svgElement.node());\n    svgString2Image( svgString, 2*layout.width, 2*layout.height, 'png', save ); // passes Blob and filesize String to the callback\n\n    function save( dataBlob, filesize ){\n      saveAs( dataBlob, 'DAG.png' ); // FileSaver.js function\n    }\n  }\n\n  // Below are the functions that handle actual exporting:\n  // getSVGString ( svgNode ) and svgString2Image( svgString, width, height, format, callback )\n  // The functions are modified from http://bl.ocks.org/rokotyan/0556f8facbaf344507cdc45dc3622177\n  function getSVGString( svgNode ) {\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n\n    var serializer = new XMLSerializer();\n    var svgString = serializer.serializeToString(svgNode);\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n\n    return svgString;\n  }\n\n\n  function svgString2Image( svgString, width, height, format, callback ) {\n    var format = format ? format : 'png';\n\n    var imgsrc = 'data:image/svg+xml;base64,'+ btoa( unescape( encodeURIComponent( svgString ) ) ); // Convert SVG string to data URL\n\n    var canvas = document.createElement(\"canvas\");\n    var context = canvas.getContext(\"2d\");\n\n    canvas.width = width;\n    canvas.height = height;\n\n    var image = new Image();\n    image.onload = function() {\n      context.clearRect ( 0, 0, width, height );\n      context.drawImage(image, 0, 0, width, height);\n\n      canvas.toBlob( function(blob) {\n        var filesize = Math.round( blob.length/1024 ) + ' KB';\n        if ( callback ) callback( blob, filesize );\n      });\n\n      \n    };\n\n    image.src = imgsrc;\n  }\n\n  // Gets all descendents of a particular node\n  // The same descendent may be included twice if there are multiple causal pathways\n  // For unique descendents, apply Set() to the result\n  function getDescendents(node, stopID = null) {\n    if (node.id === stopID) {\n      return [];\n    }\n\n    let result = Array.from(node.children);\n    for (let c of node.children) {\n      let nodeC = nodelinks.nodes.filter(n => n.id === c)[0];\n      result = result.concat(getDescendents(nodeC, stopID));\n    }\n\n    return result;\n  }\n\n  // Gets prognostic factors, i.e. covariates that influence the outcome but not the treatment\n  function getPrognostics(treatment, outcome, mediators=[], confounds=[]) {\n    // Return if no nodes or links\n    if (nodelinks.nodes.length === 0 || nodelinks.links.length === 0) {\n      return [];\n    }\n\n    // Return if no treatment and outcome variables indicated\n    if (treatment === \"\" || outcome === \"\") {\n      return [];\n    }\n\n    let treatmentID = nodelinks.nodes.filter(n => n.name === treatment)[0].id;\n    let outcomeID = nodelinks.nodes.filter(n => n.name === outcome)[0].id;\n\n    let allPrognostic = [];\n\n    for (let n of nodelinks.nodes) {\n\n      if (n.id === treatmentID) {continue;}\n\n      let isMediator = mediators.indexOf(n.id) >= 0;\n      let isConfound = confounds.indexOf(n.id) >= 0;\n\n      let childrenHasOutcome = n.children.has(outcomeID);\n      let childrenHasTreatment = n.children.has(treatmentID);\n\n      if (childrenHasOutcome && !childrenHasTreatment && !isMediator && !isConfound) {\n        allPrognostic.push(n);\n      }\n    }\n\n    return allPrognostic;\n  }\n\n  // Gets the collider attributes between treatment and outcome\n  function getColliders(treatment, outcome) {\n    // Return if no nodes or links\n    if (nodelinks.nodes.length === 0 || nodelinks.links.length === 0) {\n      return [];\n    }\n\n    // Return if no treatment and outcome variables indicated\n    if (treatment === \"\" || outcome === \"\") {\n      return [];\n    }\n\n    let t = nodelinks.nodes.filter(n => n.name === treatment)[0];\n    let o = nodelinks.nodes.filter(n => n.name === outcome)[0];\n\n    let treatmentChildren = getDescendents(t, o.id);\n    let outcomeChildren = new Set(getDescendents(o));\n\n    let colliders = new Set([...treatmentChildren].filter(x => outcomeChildren.has(x)))\n\n    return colliders;\n  }\n\n  // Gets descendents of a node that is on a path to the outcome\n  function hasOutcome(node, outcomeID) {\n    if (node.id === outcomeID) {\n      return [node];\n    }\n\n    if (node.id !== outcomeID && node.children.size === 0) {\n      return [];\n    }\n\n    let result = [];\n\n    for (let c of node.children) {\n      let nodeC = nodelinks.nodes.filter(n => n.id === c)[0];\n      let nodeResult = hasOutcome(nodeC, outcomeID);\n      if (nodeResult.length > 0) {\n        result = result.concat(nodeResult);\n      }\n    }\n\n    return result.map(r => [node].concat(r));\n  }\n\n  // Gets mediator attributes from treatment to outcome\n  function getMediators(treatment, outcome) {\n    // Return if no nodes or links\n    if (nodelinks.nodes.length === 0 || nodelinks.links.length === 0) {\n      return [];\n    }\n\n    // Return if no treatment and outcome variables indicated\n    if (treatment === \"\" || outcome === \"\") {\n      return [];\n    }\n\n    let t = nodelinks.nodes.filter(n => n.name === treatment)[0];\n    let oID = nodelinks.nodes.filter(n => n.name === outcome)[0].id;\n\n    let paths = hasOutcome(t, oID);\n\n    let mediators = []\n\n    for (let p of paths) {\n      let med = p.filter(n => n.id !== t.id && n.id !== oID);\n      mediators = mediators.concat(med);\n    }\n\n    return new Set(mediators);\n  }\n\n  // Get confounds that affect both treatments and outcomes\n  function getConfounds(treatment, outcome) {\n    // Return if no nodes or links\n    if (nodelinks.nodes.length === 0 || nodelinks.links.length === 0) {\n      return [];\n    }\n\n    // Return if no treatment and outcome variables indicated\n    if (treatment === \"\" || outcome === \"\") {\n      return [];\n    }\n\n    let confounds = [];\n    let treatmentID = nodelinks.nodes.filter(n => n.name === treatment)[0].id;\n\n    for (let n of nodelinks.nodes) {\n      let nDescendents = new Set(getDescendents(n, treatmentID));\n      let nodeDescendents = new Set(nodelinks.nodes.filter(nd => nDescendents.has(nd.id)).map(nd => nd.name));\n\n      if (nodeDescendents.has(treatment) && nodeDescendents.has(outcome)) {\n        confounds.push(n);\n      }\n    }\n\n    return confounds;\n  }\n\n  const theme = createTheme({\n    palette: {\n      grey: {\n        light: grey[300],\n        main: grey[500],\n        dark: grey[700],\n        contrastText: '#fff',\n      },\n    },\n  });\n\n  let bodyStyle = {\"display\": \"flex\"};\n  let connectIcon = {\"transform\": \"rotate(-45deg)\"};\n  let buttonStyle = {\"marginBottom\": \"0px\",\n                     \"height\":\"48px\",\n                     \"& .MuiButtonBase-root\":{\"height\":\"48px\"},};\n  let menuStyle = {\"display\": \"flex\",\n                  \"width\": \"100%\",\n                  \"alignItems\": \"center\",\n                  \"marginBottom\": \"20px\"};\n  let downloadStyle = {\"marginLeft\": \"auto\", \"marginRight\": \"none\"};\n  let aStyle = {\"height\":\"24px\"};\n  let divider = {\"borderRight\": \"1px solid gray\"};\n  let searchStyle = {\"height\": \"48px\",\n                    \"borderRadius\": \"24px\",\n                    \"marginLeft\": \"10px\",\n                    \"& .MuiOutlinedInput-input\": { height: \"12px\" },\n                    \"& .MuiOutlinedInput-root\": { \"padding\": \"11px\" },\n                    \"& .MuiInputLabel-formControl\": { \"top\": \"-1px\"}};\n  let customButtonStyle = {\"height\":\"48px\",\n                           \"padding\":\"5px 11px\",\n                           \"marginLeft\": \"10px\",\n                           \"& .MuiButton-startIcon\":{\"margin\":\"0px\"},\n                           \"& .MuiSvgIcon-root\": {\"width\":\"24px\", \"height\": \"24px\"}};\n\n  return (\n    <div style={bodyStyle}>\n      <AttributesManager\n        attributes={Object.keys(allAttributes)}\n        added={added}\n        treatment={treatment}\n        outcome={outcome}\n        addAttribute={addAttribute}\n        deleteAttribute={deleteAttribute}\n        changeTreatment={changeTreatment}\n        changeOutcome={changeOutcome}\n        handleAddTag={handleAddTag}\n        handleNodeOpen={handleNodeOpen} />\n      <DownloadDialog\n        open={open}\n        nodelinks={nodelinks}\n        treatment={treatment}\n        outcome={outcome}\n        confounds={confounds}\n        colliders={colliders}\n        mediators={mediators}\n        prognostics={prognostics}\n        handleClose={handleClose} />\n      <NodeDialog\n        open={addNode}\n        handleNodeClose={handleNodeClose}\n        addAttribute={addAttribute}\n        addCustom={addCustom} />\n      <TagDialog\n        tagNode={tagNode}\n        tagColors={tagColors}\n        attrTags={allAttributes[tagNode] ? allAttributes[tagNode][\"tags\"] : []}\n        open={addTag}\n        handleTagClose={handleTagClose}\n        updateTag={updateTag}\n        deleteTag={deleteTag} />\n      <div>\n        <div style={menuStyle}>\n          <ToggleButtonGroup\n            style={buttonStyle}\n            value={mode}\n            exclusive\n            onChange={(e, val) => toggleMode(e, val)}\n            aria-label=\"text alignment\">\n            <ToggleButton value=\"default\" alt=\"select\">\n              <a style={aStyle} title=\"select\">\n                <NearMeOutlinedIcon />\n              </a>\n            </ToggleButton>\n            <ToggleButton value=\"path\" alt=\"edit links\">\n              <a style={aStyle} title=\"edit links\">\n                <LinearScaleRoundedIcon style={connectIcon} />\n              </a>\n            </ToggleButton>\n            {/*<ToggleButton value=\"node\" alt=\"custom node\" onClick={() => handleNodeOpen()}>\n              <a title=\"custom node\">\n                <ControlPointDuplicateOutlinedIcon />\n              </a>\n            </ToggleButton>*/}\n          </ToggleButtonGroup>\n\n          {/*<ThemeProvider theme={theme}>\n            <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n              <Button\n                variant=\"outlined\"\n                startIcon={<ControlPointDuplicateOutlinedIcon />}\n                onClick={() => handleNodeOpen()}\n                color={\"grey\"}\n                sx={customButtonStyle}>\n              </Button>\n            </ButtonGroup>\n          </ThemeProvider>*/}\n\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={added.concat(Object.keys(tagColors).map(c => \"tag:\" + c))}\n            sx={{ width: 300 }}\n            onChange={(e, val) => changeSearch(e, val)}\n            renderInput={(params) =>\n              <TextField\n                {...params}\n                sx={searchStyle}\n                label=\"Search\"\n              />}\n          />\n\n          <div style={downloadStyle}>\n            <IconButton id=\"downloadSVG\" onClick={() => downloadSVG()}>\n              <a style={aStyle} title=\"save image\">\n                <AddPhotoAlternateOutlinedIcon />\n              </a>\n            </IconButton>\n            <IconButton onClick={() => handleClickOpen()}>\n              <a style={aStyle} title=\"download JSON\">\n                <FileDownloadOutlinedIcon />\n              </a>\n            </IconButton>\n        </div>\n        </div>\n        <Paper elevation={0} variant=\"outlined\">\n          <DAGEditor\n            layout={layout}\n            nodelinks={nodelinks}\n            mode={mode}\n            treatment={treatment}\n            outcome={outcome}\n            mediators={mediators}\n            colliders={colliders}\n            confounds={confounds}\n            prognostics={prognostics}\n            search={search}\n            updateNodePos={updateNodePos}\n            deleteAttribute={deleteAttribute}\n            changeTreatment={changeTreatment}\n            changeOutcome={changeOutcome}\n            updateLinks={updateLinks}\n            deleteLinks={deleteLinks}\n            _svg={_svg}\n          />\n        </Paper>\n      </div>\n    </div>\n  )\n}","import React, {Component} from 'react'\nimport {render} from 'react-dom'\n\nimport { DAG } from './DAG.js'\n\nconst Causalvis = () => {\n\n  return <div style={{\"display\": \"flex\", \"flexDirection\": \"column\", \"alignItems\": \"center\", \"width\": \"100%\", \"fontFamily\":\"sans-serif\"}}>\n  \t<div>\n\t    <h1>Causalvis</h1>\n\t    <p>This is a browser demo of the DAG module of the <a href=\"https://github.com/causalvis/causalvis\">Causalvis Python package</a>. For more information about this work, please refer to <a href=\"https://dl.acm.org/doi/full/10.1145/3544548.3581236\">our paper</a>.</p>\n\t    <DAG />\n    \t<h3>Usage</h3>\n    \t<p style={{\"width\": \"1200px\"}}>The main features of the DAG module are numbered in the image below. 1) The graph can be edited and viewed on the main canvas here. 2) Toggle buttons can be used to switch between node layout editing and link editing. 3) The Add Node button can be used to add nodes to the DAG. 4) The context menu of each variable can be accessed by pressing SHIFT + CLICK on a variable name. This will bring up options to set treatments and outcomes, edit tags, and delete variables from the visualization. 5) The DAG can be downloaded and saved as an image or <i>.json</i> file.</p>\n    \t<img style={{\"width\": \"1200px\"}} src=\"Figure_DAG.png\" alt=\"Toggle Modes Button\"></img>\n    </div>\n  </div>\n}\n\nrender(<Causalvis/>, document.querySelector('#app'))"],"sourceRoot":""}